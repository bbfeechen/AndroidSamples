/**
 * @file  ServiceGuideClient.java
 * @brief Generated by the OrbJavaClientGenerator 2.4.1
 * @date  Sat Dec 22 20:24:26 JST 2012
 *
 * Copyright 2012 Sony Corporation
 */
package com.sony.mexi.orb.client.serviceguide.v1_0;

import com.sony.mexi.orb.client.OrbAbstractClient;
import com.sony.mexi.webapi.MethodTypeHandler;
import com.sony.mexi.webapi.VersionHandler;
import com.sony.mexi.webapi.OpenHandler;

public class ServiceGuideClient
    implements com.sony.mexi.webapi.ServiceGuide {

    private OrbAbstractClient client;

    public ServiceGuideClient(OrbAbstractClient client) {
        assert (client != null);
        this.client = client;
    }

    @Override
    public int getVersions(VersionHandler handler) {
        return client.getVersions(handler);
    }

    @Override
    public int getMethodTypes(String version, MethodTypeHandler handler) {
        return client.getMethodTypes(version, handler);
    }

    public int open(OpenHandler handler) {
        return client.open(handler);
    }

    @Override
    public int getServiceProtocols(
            final com.sony.mexi.webapi.ProtocolHandler callbacks) {
        if (callbacks == null) {
            return com.sony.mexi.webapi.Status.ILLEGAL_ARGUMENT.toInt();
        }
        com.sony.mexi.webapi.Status e;
        String cbName = callbacks.getName();
        if (!client.contains(cbName + "#R")) {
            com.sony.mexi.json.JsFunction func = new com.sony.mexi.json.JsFunction() {
                private static final long serialVersionUID = 1L;

                @Override
                public com.sony.mexi.json.JsValue invoke(com.sony.mexi.json.JsArray params) {
                    if (params != null && params.length() == 2) {

                        callbacks.handleProtocols(
                            params.get(0).toJavaString(),
                            params.get(1).toJavaStringArray());
                    }
                    return com.sony.mexi.json.JsUndefined.getInstance();
                }
            };
            e = client.register(cbName + "#R", func);
            if (e != com.sony.mexi.webapi.Status.OK) {
                return e.toInt();
            }
        }
        e = client.registerStatusHandler(callbacks);
        if (e != com.sony.mexi.webapi.Status.OK) {
            return e.toInt();
        }
        com.sony.mexi.json.JsArray params = new com.sony.mexi.json.JsArray();

        e = client.call(
                "getServiceProtocols",
                params,
                callbacks.getTimeoutTime(),
                callbacks.getName() + "#R",
                callbacks.getName() + "#S");
        return e.toInt();
    }

}
